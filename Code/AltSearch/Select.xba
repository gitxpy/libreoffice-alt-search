<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Select" script:language="StarBasic">option explicit

public const BCOLOR = &amp;Hfefefe  &apos; color for the background for auxiliary selection


	&apos; find and cancel all occurences that are with the background color &quot;BCOLOR&quot;
sub ClearBackColor
	dim founds
	dim i as long
	StatusText(MSG(37), 100, false,0) &apos; &quot;Restore the background of selection...&quot;
	founds = FindAllBCOLOR()
	StatusBarStart(leftTo(MSG(7), &quot;-&quot;)  &amp;  &quot;- &quot;  &amp;  MSG(37), founds.count-1) &apos; Esc...   Restore the background of selection...&quot;
	for i = 0 to founds.count-1
		founds(i).CharBackColor = -1   &apos; set all selected backgrounds to transparent
		&apos; status info
		if i mod 27 = 0 then
			StatusBarPr(i)
			if FINDCOUNTER &lt; 0 then exit for &apos; cancel, end
		end if

	next i
end sub


	&apos; return the collection of all found backgrounds BCOLOR
sub FindAllBcolor as object
	dim SDesc
	dim Srch(0) as new com.sun.star.beans.PropertyValue
	SDesc = ALTsearchDOC.createReplaceDescriptor()
	SDesc.SearchAll = true
	SDesc.ValueSearch = true &apos; true = search the set value prop; false search only the occurence of property properties
	SDesc.SearchStyles = true &apos; search styles - must be set at search of properties
	srch(0).Name = &quot;CharBackColor&quot;
	srch(0).Value = BCOLOR
	SDesc.SetSearchAttributes(Srch())
	FindAllBcolor = ALTsearchDOC.findAll(SDesc)
end sub


	&apos; testuje zda je v dokumentu použito zvyraznení
sub isUsedCharBackColor as boolean
	dim SDesc, found
	dim Srch(0) as new com.sun.star.beans.PropertyValue
	SDesc = ALTsearchDOC.createReplaceDescriptor()
	SDesc.SearchAll = true
	SDesc.ValueSearch = false &apos; true = hledá zadanou hodnotu prop; false search only the occurence of property properties
	SDesc.SearchStyles = true &apos; search styles - must be set at search of properties
	srch(0).Name = &quot;CharBackColor&quot;
	rem  srch(0).Value = BCOLOR
	SDesc.SetSearchAttributes(Srch())
	Found = ALTsearchDOC.findFirst(SDesc)
	isUsedCharBackColor = true
	if isNull(found) then isUsedCharBackColor = false
end sub


sub PosunZakrytyText  &apos; if the cursor is hidden under the window of dialog then move the depiction
	dim data, newdata(), olddata(), i, dx, dy, x, y, d, d1, d2, posCo, posDi, lhx, lhy, pdx, pdy
	data = Split(ALTsearchDOC.CurrentController.getViewData(), &quot;;&quot;) &apos;.getbyIndex(0)&apos;ZoomFactor &apos;&quot;3375;19828;200;0;17280;9075;22883;0;0&quot;)
	olddata() = Split(ALTsearchDOC.CurrentController.getViewData(), &quot;;&quot;)

	dx = val(data(5)) - val(data(3))  &apos; width of window
	dy = val(data(6)) - val(data(4))  &apos; height of window

	x = (val(data(0))- val(data(3))) / dx   &apos; relative position of x cursor - end of selection
	y = (val(data(1))- val(data(4))) / dy   &apos; relative position of y cursor - approximately the top

	posCo = ALTsearchDOC.CurrentController.frame.ComponentWindow.PosSize  &apos; x, y, width, height of window given to Ooo main window
	posDi = oDIAL.PosSize &apos; position is relative to given parent window

	lhy = (posDi.y -55 - posCo.y) / posCo.height   &apos; coordinate y of left top corner of dialog as the ratio to the height of visible area: 0 = top margin, 1 = bottom margin
	pdy = (posDi.y - posCo.y + posDi.height) / posCo.height   &apos; coordinate y of right bottom corner of dialog as the ratio to the height of visible area: 0 = top margin, 1 = bottom margin

	lhx = (posDi.x - posCo.x) / posCo.width   &apos; coordinate y of left top corner of dialog as the ratio to the width of visible area: 0 = left margin, 1 = right margin
	pdx = (posDi.x - posCo.x + posDi.width) / posCo.width   &apos;coordinate y of right bottom corner of dialog as the ratio to the width of visible area: 0 = left margin, 1 = right margin

	&apos; to do: function  THISCOMPONENT.getVisualAreaSize(0) &apos; return the real width and height of window with the substracted docked window of stylist and navigator
	if (pdx &lt;= 0) or (pdy &lt;= 0) or (lhx &gt;= 1) or (lhy &gt;= 1)  then goto konec  &apos; dialog mimo okno editoru netreba nic delat
	if x &lt; (lhx - 0.02) then goto konec  &apos; at left from dialogu - let it be
	if x &gt; (pdx + 0.1) then goto konec  &apos; at right dialogu - let it be
	if y &lt; (lhy - 0.1) then goto konec  &apos; above the dialogem - let it be
	if y &gt; (pdy + 0.02) then goto konec  &apos; under the dialogem - let it be

	d1 = clng((y - (0.2*lhy)) * dy) &apos; move up to empty place above the dialog
	d2 = -1 * clng( ( (pdy-y)+ ((1-pdy)*0.3) )*dy) &apos; move down to empty place under the dialog

	if (lhy &gt; 0.1) then &apos; there is place above, try to move above the dialog
		d = d1
	else  &apos; else move under the dialog
		d = d2
	end if

	if (clng(data(4))+d) &lt; 0 then &apos; move to negative coordinate that means before the start of document
		&apos; probably there isn&apos;t space above, but try at least something
		d = d1
	end if

	d = (clng(d/8)*8) + 8 &apos; it seems the function restoreViewData accepts only the multiples of 8 - no probably stupidity
	data(4) = trim(str(clng(data(4))+d))
	data(6) = trim(str(clng(data(6))+d))
	ALTsearchDOC.CurrentController.restoreViewData(join(data,&quot;;&quot;))  &apos; it is not functional oftenly although it has correct data

	&apos; check if the move was successful - if no probably end of document
	newdata() = Split(ALTsearchDOC.CurrentController.getViewData(), &quot;;&quot;)
	if (val(olddata(4)) = val(newdata(4))) then
		d = d2
		d = (clng(d/8)*8) + 8 &apos; it seems the function restoreViewData accepts only the multiples of 8 - no probably stupidity
		data(4) = trim(str(clng(olddata(4))+d))
		data(6) = trim(str(clng(olddata(6))+d))
		ALTsearchDOC.CurrentController.restoreViewData(join(data,&quot;;&quot;))  &apos; it is not functional oftenly although it has correct data
	end if

	&apos; check if the move was successful - restoreViewData refuese to funct =&gt; move the dialog
	newdata() = Split(ALTsearchDOC.CurrentController.getViewData(), &quot;;&quot;)
	if (val(olddata(4)) = val(newdata(4))) then
		if y &lt; 0.5 then &apos; move the dialog to right and down
			oDIAL.setPosSize clng(posCo.width - posDi.width + posCo.x - 20), clng(posCo.height - posDi.height + posCo.y) , 0, 0, 3
		else  &apos; move the dialog to right and up
			oDIAL.setPosSize clng(posCo.width - posDi.width + posCo.x - 20), clng(30) , 0, 0, 3
		end if

	end if
konec:
end sub


	&apos; select as discontinuous block all that have the background &quot;BCOLOR&quot;
sub SelectAllBColor
	dim founds
	StatusText(MSG(36), 100, false,0)  &apos; &quot;Actualize the selection...&quot;
	founds = FindAllBcolor()
	ALTsearchDOC.getCurrentController.select(founds)
end sub


</script:module>