<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="xMoreFiles" script:language="StarBasic">
	&apos; service of button More for execute the batch on more files of Writer
Sub Bt_MoreFiles
	dim i&amp;
	GlobalScope.BasicLibraries.LoadLibrary(&quot;Tools&quot;) &apos; load library
	&apos; the same name of batch like at Run batch Bt_run
	BATCHtoEXECUTE = ucase(trim(replace_(LASTNAME, chr(9), SUBTAB))) &apos; cancel potential spaces and tabulators
	oDMOF.model.Tf_selBatch.text = BATCHtoEXECUTE
	if ucase(MSG(24))=BATCHtoEXECUTE then  &apos; no batch selected
		hlaseni1(48, false, false, MSG(48)) &apos; styl: 16=zastavit 32=? 48=! 64=info
		exit sub
	else
		&apos;create procedure according to selected batch
		SetBatch_to_BasicSub(BATCHtoEXECUTE, &quot;Altsearch_LastMultiBatch&quot;)
	end if

	&apos; load the list of opened txt documents
	LISTofWFILES = dejArrayOfTexts &apos;return the array with the objects of documents
	&apos; delete old list
	oDMOF.getcontrol(&quot;Lb_wfiles&quot;).removeItems(0,oDMOF.getcontrol(&quot;Lb_wfiles&quot;).itemCount)
	for i = 0 to Ubound(LISTofWFILES)   &apos; load the list of txt documents
		oDMOF.getControl(&quot;Lb_wfiles&quot;).addItem(getNameIdentifString(LISTofWFILES(i)),0)
	next i
	oDMOF.execute() &apos; execute the dialog
End Sub


	&apos;select all items of listbox
sub Bt_selectAll
	dim i, oList
	oList = oDMOF.getcontrol(&quot;Lb_wfiles&quot;)
	for i = 0 to ubound(oList.Items())
		oList.selectItemPos(i, true)
	next i
end sub


	&apos;run the batch to all files
sub Bt_startBatch
	&apos; list of selected files for running the batch
	LISTfilesForBATCH() = oDMOF.getcontrol(&quot;Lb_wfiles&quot;).GetSelectedItems()
	if ubound(LISTfilesForBATCH()) &lt; 0 then
		hlaseni1(48, false, false, MSG(49)) &apos; styl: 16=zastavit 32=? 48=! 64=info
		oDMOF.toFront
		exit sub
	end if

	oDMOF.endExecute() &apos; end the dialog
	&apos; end the dialog AS
	KonecTm
	wait 300 &apos; wait for ending of AS

	&apos; run the batch on all files
	if oDMOF.getcontrol(&quot;Cb_DisabRepBatch&quot;).state = 1 then MULTIfleBatchDISABLEMSG = true  &apos; the control of suppression of report

	MULTIfileBatchRUN = true  &apos; flag that the batch on more files is run
	MULTIfleBatchREPORT = &quot;&quot;
	for COUNTBATCHsel = 0 to ubound(LISTfilesForBATCH())  &apos; cycle for al selected documents

		for COUNTBATCH = 0 to ubound(LISTofWFILES())  &apos; cycle for all opened text docs
			&apos; is document selected for run the batch?
			if getNameIdentifString(LISTofWFILES(COUNTBATCH)) = LISTfilesForBATCH(COUNTBATCHsel) then
				&apos; yes, execute the batch
				LISTofWFILES(COUNTBATCH).CurrentController.Frame.containerWindow.setFocus()
				LISTofWFILES(COUNTBATCH).CurrentController.Frame.containerWindow.toFront
				oBATCHdispatch = createUnoService( &quot;com.sun.star.frame.DispatchHelper&quot; )
				oBATCHdispatch.executeDispatch( StarDesktop, &quot;macro:///Standard.AltSearchBatchs.Altsearch_LastMultiBatch&quot;,&quot;&quot;, 0, Array() )
			end if

		next COUNTBATCH

	next COUNTBATCHsel

	hlaseni1(64, false, false, MULTIfleBatchREPORT  &amp;  cr(1)  &amp;  &quot; &quot;) &apos; overall report
	MULTIfileBatchRUN = false
	MULTIfleBatchDISABLEMSG = false
end sub


	&apos; return the array of all opened text documents
function dejArrayOfTexts as array
	dim pol()
	Dim oDocs, oDoc1 As Object
	dim i
	i = 0
	oDocs = StarDesktop.getComponents().createEnumeration()
	Do While oDocs.hasMoreElements()
		oDoc1 = oDocs.nextElement()

		on error goto chyba   &apos; not include the files with some bug
		if oDoc1.ImplementationName = &quot;SwXTextDocument&quot; then
			if left(oDoc1.Title,28) = &quot;vnd.sun.star.help://swriter/&quot; then goto chyba  &apos; skip the help
			redim preserve pol(i)
			pol(i) = oDoc1
			i = i+1
		end if
chyba:
	Loop

	dejArrayOfTexts = pol()
end function


	&apos; return the string of name and path to statement
sub getNameIdentifString(wdoc as object) as string
	getNameIdentifString = wdoc.Title &amp; chr(9) &amp; &quot;     &quot; &amp; replace(wdoc.URL,&quot;%20&quot;,&quot; &quot;)
end sub


</script:module>